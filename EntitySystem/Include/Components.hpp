/*
	This file is automatically generated.
	Do not edit this file manually.
*/

#ifndef _ENTITYSYSTEM_COMPONENTS_HPP_
#define _ENTITYSYSTEM_COMPONENTS_HPP_

#include "Component.hpp"
#include "ComponentDataTypes.hpp"

namespace Fnd
{
namespace EntitySystem
{

static const unsigned int InvalidComponentId = -1;

static const unsigned int InvalidComponentIndex = -1;

static const ComponentId InvalidComponent( InvalidComponentId, InvalidComponentIndex );

/**
	Get the id of a component type.
	@tparam ComponentType The type of component to add.
	@return Returns the id of ComponentType.
*/
template <typename ComponentType>
inline unsigned int GetComponentId();

/// Struct generated for SceneNodeComponent.
struct SceneNodeComponent_s
{
	SceneNodeComponent_s();
	~SceneNodeComponent_s();

	string64 parent_name;
	uint32 parent_id;
	Fnd::Math::Vector3 position;
	Fnd::Math::Quaternion rotation;
	Fnd::Math::Vector3 scale;
	Fnd::Math::Matrix4 transform;
};
#define SCENENODECOMPONENT_ID 0
/// Component<> class generated for SceneNodeComponent.
typedef Fnd::EntitySystem::ComponentTemplate<SceneNodeComponent_s, SCENENODECOMPONENT_ID> SceneNodeComponent;

/// Struct generated for CameraPropertiesComponent.
struct CameraPropertiesComponent_s
{
	CameraPropertiesComponent_s();
	~CameraPropertiesComponent_s();

	uint32 camera_id;
	uint32 camera_type;
	sint32 viewport_x;
	sint32 viewport_y;
	sint32 viewport_w;
	sint32 viewport_h;
	float32 near_plane;
	float32 far_plane;
	float32 fov;
};
#define CAMERAPROPERTIESCOMPONENT_ID 1
/// Component<> class generated for CameraPropertiesComponent.
typedef Fnd::EntitySystem::ComponentTemplate<CameraPropertiesComponent_s, CAMERAPROPERTIESCOMPONENT_ID> CameraPropertiesComponent;

/// Struct generated for ModelComponent.
struct ModelComponent_s
{
	ModelComponent_s();
	~ModelComponent_s();

	string512 model_asset_name;
	uint32 model_id;
};
#define MODELCOMPONENT_ID 2
/// Component<> class generated for ModelComponent.
typedef Fnd::EntitySystem::ComponentTemplate<ModelComponent_s, MODELCOMPONENT_ID> ModelComponent;

/// Struct generated for RigidBodyComponent.
struct RigidBodyComponent_s
{
	RigidBodyComponent_s();
	~RigidBodyComponent_s();

	uint32 collider_type;
	bool is_static;
	bool is_kinematic;
	bool uses_gravity;
	bool can_collide;
	float32 mass;
	float32 friction;
	float32 restitution;
	Fnd::Math::Vector3 velocity;
	Fnd::Math::Vector3 angular_velocity;
	Fnd::Math::Vector3 linear_impulse;
	Fnd::Math::Vector3 angular_impulse;
};
#define RIGIDBODYCOMPONENT_ID 3
/// Component<> class generated for RigidBodyComponent.
typedef Fnd::EntitySystem::ComponentTemplate<RigidBodyComponent_s, RIGIDBODYCOMPONENT_ID> RigidBodyComponent;

/// Struct generated for AmbientLightComponent.
struct AmbientLightComponent_s
{
	AmbientLightComponent_s();
	~AmbientLightComponent_s();

	Fnd::Math::Vector3 colour;
};
#define AMBIENTLIGHTCOMPONENT_ID 4
/// Component<> class generated for AmbientLightComponent.
typedef Fnd::EntitySystem::ComponentTemplate<AmbientLightComponent_s, AMBIENTLIGHTCOMPONENT_ID> AmbientLightComponent;

/// Struct generated for PointLightComponent.
struct PointLightComponent_s
{
	PointLightComponent_s();
	~PointLightComponent_s();

	Fnd::Math::Vector3 colour;
	float32 range;
	float32 distance_falloff_start;
	Fnd::Math::Vector4 distance_falloff_params;
};
#define POINTLIGHTCOMPONENT_ID 5
/// Component<> class generated for PointLightComponent.
typedef Fnd::EntitySystem::ComponentTemplate<PointLightComponent_s, POINTLIGHTCOMPONENT_ID> PointLightComponent;

/// Struct generated for DirectionalLightComponent.
struct DirectionalLightComponent_s
{
	DirectionalLightComponent_s();
	~DirectionalLightComponent_s();

	Fnd::Math::Vector3 colour;
};
#define DIRECTIONALLIGHTCOMPONENT_ID 6
/// Component<> class generated for DirectionalLightComponent.
typedef Fnd::EntitySystem::ComponentTemplate<DirectionalLightComponent_s, DIRECTIONALLIGHTCOMPONENT_ID> DirectionalLightComponent;

/// Struct generated for SpotLightComponent.
struct SpotLightComponent_s
{
	SpotLightComponent_s();
	~SpotLightComponent_s();

	Fnd::Math::Vector3 colour;
	float32 range;
	float32 near_plane;
	float32 fov;
	float32 distance_falloff_start;
	float32 angular_falloff_start;
	Fnd::Math::Vector4 distance_falloff_params;
	Fnd::Math::Vector4 angular_falloff_params;
};
#define SPOTLIGHTCOMPONENT_ID 7
/// Component<> class generated for SpotLightComponent.
typedef Fnd::EntitySystem::ComponentTemplate<SpotLightComponent_s, SPOTLIGHTCOMPONENT_ID> SpotLightComponent;


/*
	GetComponentId<> implementations.
*/

template <>
inline unsigned int GetComponentId<SceneNodeComponent>()
{
	return SCENENODECOMPONENT_ID;
}
template <>
inline unsigned int GetComponentId<CameraPropertiesComponent>()
{
	return CAMERAPROPERTIESCOMPONENT_ID;
}
template <>
inline unsigned int GetComponentId<ModelComponent>()
{
	return MODELCOMPONENT_ID;
}
template <>
inline unsigned int GetComponentId<RigidBodyComponent>()
{
	return RIGIDBODYCOMPONENT_ID;
}
template <>
inline unsigned int GetComponentId<AmbientLightComponent>()
{
	return AMBIENTLIGHTCOMPONENT_ID;
}
template <>
inline unsigned int GetComponentId<PointLightComponent>()
{
	return POINTLIGHTCOMPONENT_ID;
}
template <>
inline unsigned int GetComponentId<DirectionalLightComponent>()
{
	return DIRECTIONALLIGHTCOMPONENT_ID;
}
template <>
inline unsigned int GetComponentId<SpotLightComponent>()
{
	return SPOTLIGHTCOMPONENT_ID;
}
}
}

#endif
