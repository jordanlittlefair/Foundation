/*
	This file is automatically generated.
	Do not edit this file manually.
*/

#ifndef _SYSTEMNODES_HPP_
#define _SYSTEMNODES_HPP_

#include "Components.hpp"

namespace Fnd
{
namespace EntitySystem
{

class EntitySystem;

class AmbientLightNode
{
	public:

		struct Pointers
		{
			AmbientLightComponent* ambientlight;
		};

		AmbientLightNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetAmbientLightComponentId() const;

	private:

		unsigned int ambientlight_id;
};

class CameraNode
{
	public:

		struct Pointers
		{
			SceneNodeComponent* scenenode;
			CameraPropertiesComponent* cameraproperties;
		};

		CameraNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetSceneNodeComponentId() const;

		unsigned int GetCameraPropertiesComponentId() const;

	private:

		unsigned int scenenode_id;
		unsigned int cameraproperties_id;
};

class DirectionalLightNode
{
	public:

		struct Pointers
		{
			SceneNodeComponent* scenenode;
			DirectionalLightComponent* directionallight;
		};

		DirectionalLightNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetSceneNodeComponentId() const;

		unsigned int GetDirectionalLightComponentId() const;

	private:

		unsigned int scenenode_id;
		unsigned int directionallight_id;
};

class ModelNode
{
	public:

		struct Pointers
		{
			SceneNodeComponent* scenenode;
			ModelComponent* model;
		};

		ModelNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetSceneNodeComponentId() const;

		unsigned int GetModelComponentId() const;

	private:

		unsigned int scenenode_id;
		unsigned int model_id;
};

class RigidBodyNode
{
	public:

		struct Pointers
		{
			SceneNodeComponent* scenenode;
			RigidBodyComponent* rigidbody;
		};

		RigidBodyNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetSceneNodeComponentId() const;

		unsigned int GetRigidBodyComponentId() const;

	private:

		unsigned int scenenode_id;
		unsigned int rigidbody_id;
};

class PointLightNode
{
	public:

		struct Pointers
		{
			SceneNodeComponent* scenenode;
			PointLightComponent* pointlight;
		};

		PointLightNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetSceneNodeComponentId() const;

		unsigned int GetPointLightComponentId() const;

	private:

		unsigned int scenenode_id;
		unsigned int pointlight_id;
};

class PostProcessNode
{
	public:

		struct Pointers
		{
			AmbientOcclusionComponent* ambientocclusion;
			MotionBlurComponent* motionblur;
			BloomComponent* bloom;
			ToneMapComponent* tonemap;
		};

		PostProcessNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetAmbientOcclusionComponentId() const;

		unsigned int GetMotionBlurComponentId() const;

		unsigned int GetBloomComponentId() const;

		unsigned int GetToneMapComponentId() const;

	private:

		unsigned int ambientocclusion_id;
		unsigned int motionblur_id;
		unsigned int bloom_id;
		unsigned int tonemap_id;
};

class RumbleNode
{
	public:

		struct Pointers
		{
			RumbleComponent* rumble;
		};

		RumbleNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetRumbleComponentId() const;

	private:

		unsigned int rumble_id;
};

class SceneNodeNode
{
	public:

		struct Pointers
		{
			SceneNodeComponent* scenenode;
		};

		SceneNodeNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetSceneNodeComponentId() const;

	private:

		unsigned int scenenode_id;
};

class ShadowCasterNode
{
	public:

		struct Pointers
		{
			SceneNodeComponent* scenenode;
			ModelComponent* model;
		};

		ShadowCasterNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetSceneNodeComponentId() const;

		unsigned int GetModelComponentId() const;

	private:

		unsigned int scenenode_id;
		unsigned int model_id;
};

class ShadowedSpotLightNode
{
	public:

		struct Pointers
		{
			SceneNodeComponent* scenenode;
			SpotLightComponent* spotlight;
		};

		ShadowedSpotLightNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetSceneNodeComponentId() const;

		unsigned int GetSpotLightComponentId() const;

	private:

		unsigned int scenenode_id;
		unsigned int spotlight_id;
};

class SkyBoxNode
{
	public:

		struct Pointers
		{
			SkyBoxComponent* skybox;
		};

		SkyBoxNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetSkyBoxComponentId() const;

	private:

		unsigned int skybox_id;
};

class SpotLightNode
{
	public:

		struct Pointers
		{
			SceneNodeComponent* scenenode;
			SpotLightComponent* spotlight;
		};

		SpotLightNode();

		bool Create( Entity* entity );

		bool GetPointers( EntitySystem& entity_system, Pointers& pointers );

		unsigned int GetSceneNodeComponentId() const;

		unsigned int GetSpotLightComponentId() const;

	private:

		unsigned int scenenode_id;
		unsigned int spotlight_id;
};

}
}

#endif
