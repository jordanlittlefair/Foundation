<!-- 
	The game world can be loaded from this xml file.
	
	All entities consist of <Components> which store the 
	entity's data, and <Nodes> which provide behaviour. 
	
	Eventually there will be a <ScriptComponent> which will
	allow an entity's behavious to be scripted in a .py or .lua
	file.
-->

<World>
	
	<Entities>
	
		<!-- The main user controlled camera -->
		<Entity name = "Main Camera"> <!--The Entity's name is optional, but must be unique -->
			<!-- Components must be declared in the Components tag -->
			<Components>
				
				<!-- Each Component should contain the data required -->
				<SceneNodeComponent>
					<parent_name value = ""/>
					<parent_id value = "0"/>
					<!-- Vectors are declared in brackets -->
					<position value = "( -122, 120, 40 )"/>
					<rotation value = "( 0, 0, 0, 1 )"/>
					<scale value = "( 1, 1, 1 )"/>
				</SceneNodeComponent>
				
				<CameraPropertiesComponent>
					<near_plane value = "0.1"/>
					<far_plane value = "10000"/>
					<!-- Angles are in either Degrees or Radians (?)-->
					<fov value = "60"/>
				</CameraPropertiesComponent>
				
				<!-- Rumble is implemented but no gameplay makes us of it yet -->
				<RumbleComponent>
					<controller_0		value = "true"	/>
					<controller_1		value = "false"	/>
					<controller_2		value = "false"	/>
					<controller_3		value = "false"	/>
					<all_controllers	value = "false"	/>
					<lf_intensity 		value = "0"	/>
					<rf_intensity 		value = "0"	/>
				</RumbleComponent>
			</Components>
			
			<!-- Nodes are declared in the Nodes tag -->
			<Nodes>
				<!-- Node creation will fail if the Entity doesn't have the correct components -->
				<CameraNode/>
				<SceneNodeNode/>
				<RumbleNode/>
				
			</Nodes>
			
			<Scripts>
			</Scripts>
		</Entity>
		
		<!-- A simple unshadowed directional light -->
		<Entity name = "The Sun">		
			<Components>
			
				<SceneNodeComponent>
					<parent_name value = ""/>
					<parent_id value = "0"/>
					<position value = "( 0, 0, 0 )"/>
					<rotation value = "( 0, 0, 0, 1 )"/>
					<scale value = "( 0.2, 0.2, 0.2 )"/>
				</SceneNodeComponent>
				
				<DirectionalLightComponent>
					<colour value = "( 0.5, 0.5, 0.5 )"/>
				</DirectionalLightComponent>
							
			</Components>
			
			<Nodes>
			
				<DirectionalLightNode/>
				<SceneNodeNode/>
				
			</Nodes>
			
			<Scripts>
			</Scripts>
		</Entity>
		
		<!-- The big shadow casting point light -->
		<Entity name = "big light">
			
			<Components>
			
				<SceneNodeComponent>
					<parent_name value = ""/>
					<parent_id value = "0"/>
					<position value = "( -175, 250, 25 )"/>
					<rotation value = "( 0, 0, 0, 1 )"/>
					<scale value = "( 1, 1, 1 )"/>
				</SceneNodeComponent>
						
				<SpotLightComponent>
					<colour value = "( 1.2, 1.2, 1.2 )"/>
					<range value = "520"/>
					<near_plane value = "0.1"/>
					<fov value = "80"/>
					<distance_falloff_start value = "0.2"/>
					<angular_falloff_start value = "0.6"/>
					<distance_falloff_params value = "( 1, 1, 1, 0 )"/>
					<angular_falloff_params value = "( 1, 1, 0, 0 )"/>
				</SpotLightComponent>
								
			</Components>
			
			<Nodes>
			
				<ShadowedSpotLightNode/>
				<SceneNodeNode/>
					
			</Nodes>
			
			<Scripts>
			</Scripts>
		</Entity>
		
		<!-- A moving shadow casting spot light -->
		<Entity name = "MovingSpotLight">
		
			<Components>
			
				<SceneNodeComponent>
					<parent_name value = ""/>
					<parent_id value = "0"/>
					<position value = "( 0, 0, 0 )"/>
					<rotation value = "( 0, 0, 0, 1 )"/>
					<scale value = "( 1, 1, 1 )"/>
				</SceneNodeComponent>
						
				<SpotLightComponent>
					<colour value = "( 8, 8, 12 )"/>
					<range value = "520"/>
					<near_plane value = "0.1"/>
					<fov value = "50"/>
					<distance_falloff_start value = "0"/>
					<angular_falloff_start value = "0"/>
					<distance_falloff_params value = "( 1, 0.3, 0, 0 )"/>
					<angular_falloff_params value = "( 1, 1, 0, 0 )"/>
				</SpotLightComponent>
								
			</Components>
			
			<Nodes>
			
				<ShadowedSpotLightNode/>
				<SceneNodeNode/>
					
			</Nodes>
			
			<Scripts>
			</Scripts>
		</Entity>
		
		<!-- A point light attached to the moving spot light -->
		<Entity name = "point_on_spot" >
					
			<Components>
			
				<SceneNodeComponent>
					<parent_name value = ""/>
					<parent_id value = "0"/>
					<position value = "( 0, 0, 0 )"/>
					<rotation value = "( 0, 0, 0, 1 )"/>
					<scale value = "( 100, 100, 100 )"/>
				</SceneNodeComponent>
									
				<PointLightComponent>
					<colour value = "( 2.4, 0.4, 0.4 )"/>
					<!-- Point light range/scale needs changing -->
					<range value = "1"/>
					<distance_falloff_start value = "0"/>
					<distance_falloff_params value = "( 1, 1, 0, 0 )"/>
				</PointLightComponent>
											
			</Components>
			
			<Nodes>
			
				<SceneNodeNode/>
				<PointLightNode/>
					
			</Nodes>
			
			<Scripts>
			</Scripts>
		</Entity>
		
		<!-- A spot light to light the lion -->
		<Entity name = "lion light">
			
			<Components>
				
				<SceneNodeComponent>
					<parent_name value = ""/>
					<parent_id value = "0"/>
					<position  value = "( -165, 40, 5 )"/>
					<rotation value = "( 0, 0, 0, 1 )"/>
					<scale value = "( 1, 1, 1 )"/>
				</SceneNodeComponent>
							
				<SpotLightComponent>
					<colour value = "( 2.4, 2.4, 4 )"/>
					<range value = "400"/>
					<near_plane value = "0.1"/>
					<fov value = "60"/>
					<distance_falloff_start value = "0"/>
					<angular_falloff_start value = "0"/>
					<distance_falloff_params value = "( 1, 0.3, 0, 0 )"/>
					<angular_falloff_params value = "( 1, 0.3, 0, 0 )"/>
				</SpotLightComponent>
					
			</Components>
			
			<Nodes>
			
				<SceneNodeNode/>
				<SpotLightNode/>
				
			</Nodes>
			
			<Scripts>
			</Scripts>
		</Entity>
		
		<Entity name = "post effects">
			
			<Components>
				
				<AmbientOcclusionComponent>
					<ssao_radius value = "8"/>
					<ssao_exponent value = "16"/>
					<ssao_blur_radius value = "8"/>
				</AmbientOcclusionComponent>
				
				<AmbientLightComponent>
					<colour value = "( 0.25, 0.25, 0.25 )"/>
				</AmbientLightComponent>
				
				<SkyBoxComponent>
					<sky_colour value = "( 1.6, 0.8, 0.4 )"/>
					<!--
					Needs an option to use a textured skybox.
						Textures can be read from a cube map in the shader but the creation
						of the cubemap from file(s) is not yet implemented.
					-->
				</SkyBoxComponent>
				
				<MotionBlurComponent>
					<target_fps value = "60"/>
					<motion_blur_scale value = "0.75"/>
				</MotionBlurComponent>
				
				<BloomComponent>
					<bloom_threshold value = "1"/>
					<bloom_blur_radius value = "16"/>
					<!--
					Adjust blur parameters:
						Get sigma from radius or use box filter?
						Should be 1 parameter for simplicity?
					-->
				</BloomComponent>
				
				<ToneMapComponent>
					<f_number value = "-1"/>
					<!--
						Set a 'dynamic' option which automatically adjusts the
						exposure based on the average luminance of the screen?
						
						Increasing the f-number by one halves the light intensity.
						Decreasing the f-number by one doubles the light intensity.
					-->
				</ToneMapComponent>
				
			</Components>
			
			<Nodes>
				
				<PostProcessNode/>
				<AmbientLightNode/>
				<SkyBoxNode/>
				
			</Nodes>
			
			<Scripts>
			</Scripts>
		</Entity>
		
		<!-- The Sponza model -->
		<Entity name = "LoadedSponza">
			
			<Components>
			
				<SceneNodeComponent>
					<parent_name value = ""/>
					<parent_id value = "0"/>
					<position value = "( 0, 0, 0 )"/>
					<rotation value = "( 0, 0, 0, 1 )"/>
					<scale value = "( 0.2, 0.2, 0.2 )"/>
				</SceneNodeComponent>
				
				<ModelComponent>
					<model	value = "0"	/>
					<model_asset_name value = "SponzaModel"/>
					<model_id value = "0"/>
				</ModelComponent>
							
			</Components>
			
			<Nodes>
			
				<ModelNode/>
				<ShadowCasterNode/>
				<SceneNodeNode/>
				
			</Nodes>
			
			<Scripts>
			</Scripts>
		</Entity>
		
		<!-- The Buddha model -->	
		<Entity name = "Buddha">
				
			<Components>
			
				<SceneNodeComponent>
					<parent_name value = ""/>
					<parent_id value = "0"/>
					<position value = "( 150, -1, 8 )"/>
					<rotation value = "( 0, 0, 0, 1 )"/>
					<scale value = "( 7, 7, 7 )"/>
				</SceneNodeComponent>
						
				<ModelComponent>
					<model	value = "0"	/>
					<model_asset_name value = "BuddhaModel"/>
					<model_id value = "0"/>
				</ModelComponent>
						
			</Components>
			
			<Nodes>
			
				<ModelNode/>
				<ShadowCasterNode/>
				<SceneNodeNode/>
					
			</Nodes>
			
			<Scripts>
			</Scripts>
		</Entity>
		
		<!-- The Dragon model -->
		<Entity name = "Dragon">
			
			<Components>
			
				<SceneNodeComponent>
					<parent_name value = ""/>
					<parent_id value = "0"/>
					<position value = "( 0, -1, 5 )"/>
					<rotation value = "( 0, 0, 0, 1 )"/>
					<scale value = "( 5, 5, 5 )"/>
				</SceneNodeComponent>
						
				<ModelComponent>
					<model	value = "0"	/>
					<model_asset_name value = "DragonModel"/>
					<model_id value = "0"/>
				</ModelComponent>
						
			</Components>
			
			<Nodes>
			
				<ModelNode/>
				<ShadowCasterNode/>
				<SceneNodeNode/>
					
			</Nodes>
			
			<Scripts>
			</Scripts>
		</Entity>
		
		<!-- The Bunny model -->
		<Entity name = "Bunny">
			
			<Components>
			
				<SceneNodeComponent>
					<parent_name value = ""/>
					<parent_id value = "0"/>
					<position value = "( -150, 4, 20 )"/>
					<rotation value = "( 0, 0, 0, 1 )"/>
					<scale value = "( 15, 15, 15 )"/>
				</SceneNodeComponent>
						
				<ModelComponent>
					<model	value = "0"	/>
					<model_asset_name value = "BunnyModel"/>
					<model_id value = "0"/>
				</ModelComponent>
						
			</Components>
			
			<Nodes>
			
				<ModelNode/>
				<ShadowCasterNode/>
				<SceneNodeNode/>
					
			</Nodes>
			
			<Scripts>
			</Scripts>
		</Entity>
		
	</Entities>
	
</World>